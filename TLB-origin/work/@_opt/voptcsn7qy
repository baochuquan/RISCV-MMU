library verilog;
use verilog.vl_types.all;
entity TLB is
    port(
        clock           : in     vl_logic;
        reset           : in     vl_logic;
        io_req_ready    : out    vl_logic;
        io_req_valid    : in     vl_logic;
        io_req_bits_vpn : in     vl_logic_vector(27 downto 0);
        io_req_bits_passthrough: in     vl_logic;
        io_req_bits_instruction: in     vl_logic;
        io_req_bits_store: in     vl_logic;
        io_resp_miss    : out    vl_logic;
        io_resp_ppn     : out    vl_logic_vector(19 downto 0);
        io_resp_xcpt_ld : out    vl_logic;
        io_resp_xcpt_st : out    vl_logic;
        io_resp_xcpt_if : out    vl_logic;
        io_resp_cacheable: out    vl_logic;
        io_ptw_req_ready: in     vl_logic;
        io_ptw_req_valid: out    vl_logic;
        io_ptw_req_bits_prv: out    vl_logic_vector(1 downto 0);
        io_ptw_req_bits_pum: out    vl_logic;
        io_ptw_req_bits_mxr: out    vl_logic;
        io_ptw_req_bits_addr: out    vl_logic_vector(26 downto 0);
        io_ptw_req_bits_store: out    vl_logic;
        io_ptw_req_bits_fetch: out    vl_logic;
        io_ptw_resp_valid: in     vl_logic;
        io_ptw_resp_bits_pte_reserved_for_hardware: in     vl_logic_vector(15 downto 0);
        io_ptw_resp_bits_pte_ppn: in     vl_logic_vector(37 downto 0);
        io_ptw_resp_bits_pte_reserved_for_software: in     vl_logic_vector(1 downto 0);
        io_ptw_resp_bits_pte_d: in     vl_logic;
        io_ptw_resp_bits_pte_a: in     vl_logic;
        io_ptw_resp_bits_pte_g: in     vl_logic;
        io_ptw_resp_bits_pte_u: in     vl_logic;
        io_ptw_resp_bits_pte_x: in     vl_logic;
        io_ptw_resp_bits_pte_w: in     vl_logic;
        io_ptw_resp_bits_pte_r: in     vl_logic;
        io_ptw_resp_bits_pte_v: in     vl_logic;
        io_ptw_ptbr_asid: in     vl_logic_vector(6 downto 0);
        io_ptw_ptbr_ppn : in     vl_logic_vector(37 downto 0);
        io_ptw_invalidate: in     vl_logic;
        io_ptw_status_debug: in     vl_logic;
        io_ptw_status_isa: in     vl_logic_vector(31 downto 0);
        io_ptw_status_prv: in     vl_logic_vector(1 downto 0);
        io_ptw_status_sd: in     vl_logic;
        io_ptw_status_zero3: in     vl_logic_vector(30 downto 0);
        io_ptw_status_sd_rv32: in     vl_logic;
        io_ptw_status_zero2: in     vl_logic_vector(1 downto 0);
        io_ptw_status_vm: in     vl_logic_vector(4 downto 0);
        io_ptw_status_zero1: in     vl_logic_vector(3 downto 0);
        io_ptw_status_mxr: in     vl_logic;
        io_ptw_status_pum: in     vl_logic;
        io_ptw_status_mprv: in     vl_logic;
        io_ptw_status_xs: in     vl_logic_vector(1 downto 0);
        io_ptw_status_fs: in     vl_logic_vector(1 downto 0);
        io_ptw_status_mpp: in     vl_logic_vector(1 downto 0);
        io_ptw_status_hpp: in     vl_logic_vector(1 downto 0);
        io_ptw_status_spp: in     vl_logic;
        io_ptw_status_mpie: in     vl_logic;
        io_ptw_status_hpie: in     vl_logic;
        io_ptw_status_spie: in     vl_logic;
        io_ptw_status_upie: in     vl_logic;
        io_ptw_status_mie: in     vl_logic;
        io_ptw_status_hie: in     vl_logic;
        io_ptw_status_sie: in     vl_logic;
        io_ptw_status_uie: in     vl_logic
    );
end TLB;
